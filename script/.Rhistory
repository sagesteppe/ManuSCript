plot.title = element_text(hjust = 0.5),
axis.text.y = element_text(angle = 45),
panel.grid.major.x = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank()
)
ggplot(ACC_sens_Spec, aes(y = Sp_Acc, x = Method, color = Method, fill = Method), alpha = 0.5) +
#  geom_jitter(width = 0.1, shape = 1) +
geom_violin(trim=FALSE) +
stat_summary(fun.y=median, geom="point", shape = 23) +
# stat_boxplot(#
#    notch = T, notchwidth = 0.75,
#    varwidth = T) +
expand_limits(y = min_v - 5) + # expand the plot so we can fit sample size
theme_bw() +
scale_colour_manual(values = c('#F4AFB4', '#94A89A')) +
scale_y_continuous(labels = scales::percent_format(scale = 1), limits = c(0,100)) + # % symbol
scale_x_discrete(labels = c('Naive', "Ours")) +
labs(
y = 'Reads Correctly Classified Per Sample',
x = 'Approach',
title = 'Accuracy of\nClassification Approaches') +
theme(
legend.position = 'none',  # two groups, already labeled, seems redundant?
plot.title = element_text(hjust = 0.5),
axis.text.y = element_text(angle = 45),
panel.grid.major.x = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank()
)
ggplot(ACC_sens_Spec, aes(y = Sp_Acc, x = Method, color = Method), alpha = 0.5) +
#  geom_jitter(width = 0.1, shape = 1) +
geom_violin(trim=FALSE) +
stat_summary(fun.y=median, geom="point", shape = 23, aes(fill = Method)) +
# stat_boxplot(#
#    notch = T, notchwidth = 0.75,
#    varwidth = T) +
expand_limits(y = min_v - 5) + # expand the plot so we can fit sample size
theme_bw() +
scale_colour_manual(values = c('#F4AFB4', '#94A89A')) +
scale_y_continuous(labels = scales::percent_format(scale = 1), limits = c(0,100)) + # % symbol
scale_x_discrete(labels = c('Naive', "Ours")) +
labs(
y = 'Reads Correctly Classified Per Sample',
x = 'Approach',
title = 'Accuracy of\nClassification Approaches') +
theme(
legend.position = 'none',  # two groups, already labeled, seems redundant?
plot.title = element_text(hjust = 0.5),
axis.text.y = element_text(angle = 45),
panel.grid.major.x = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank()
)
ggplot(ACC_sens_Spec, aes(y = Sp_Acc, x = Method, color = Method), alpha = 0.5) +
#  geom_jitter(width = 0.1, shape = 1) +
geom_violin(trim=FALSE) +
stat_summary(fun.y=median, geom="point", shape = 23, size = 2, aes(fill = Method)) +
# stat_boxplot(#
#    notch = T, notchwidth = 0.75,
#    varwidth = T) +
expand_limits(y = min_v - 5) + # expand the plot so we can fit sample size
theme_bw() +
scale_colour_manual(values = c('#F4AFB4', '#94A89A')) +
scale_y_continuous(labels = scales::percent_format(scale = 1), limits = c(0,100)) + # % symbol
scale_x_discrete(labels = c('Naive', "Ours")) +
labs(
y = 'Reads Correctly Classified Per Sample',
x = 'Approach',
title = 'Accuracy of\nClassification Approaches') +
theme(
legend.position = 'none',  # two groups, already labeled, seems redundant?
plot.title = element_text(hjust = 0.5),
axis.text.y = element_text(angle = 45),
panel.grid.major.x = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank()
)
ggplot(ACC_sens_Spec, aes(y = Sp_Acc, x = Method, color = Method), alpha = 0.5) +
#  geom_jitter(width = 0.1, shape = 1) +
geom_violin(trim=FALSE) +
stat_summary(fun.y=median, geom="point", shape = 23, size = 3, aes(fill = Method)) +
# stat_boxplot(#
#    notch = T, notchwidth = 0.75,
#    varwidth = T) +
expand_limits(y = min_v - 5) + # expand the plot so we can fit sample size
theme_bw() +
scale_colour_manual(values = c('#F4AFB4', '#94A89A')) +
scale_y_continuous(labels = scales::percent_format(scale = 1), limits = c(0,100)) + # % symbol
scale_x_discrete(labels = c('Naive', "Ours")) +
labs(
y = 'Reads Correctly Classified Per Sample',
x = 'Approach',
title = 'Accuracy of\nClassification Approaches') +
theme(
legend.position = 'none',  # two groups, already labeled, seems redundant?
plot.title = element_text(hjust = 0.5),
axis.text.y = element_text(angle = 45),
panel.grid.major.x = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank()
)
ggplot(ACC_sens_Spec, aes(y = Sp_Acc, x = Method, color = Method), alpha = 0.5) +
#  geom_jitter(width = 0.1, shape = 1) +
geom_violin(trim=FALSE) +
stat_summary(fun.y=median, geom="point", shape = 23, size = 2.5, aes(fill = Method)) +
# stat_boxplot(#
#    notch = T, notchwidth = 0.75,
#    varwidth = T) +
expand_limits(y = min_v - 5) + # expand the plot so we can fit sample size
theme_bw() +
scale_colour_manual(values = c('#F4AFB4', '#94A89A')) +
scale_y_continuous(labels = scales::percent_format(scale = 1), limits = c(0,100)) + # % symbol
scale_x_discrete(labels = c('Naive', "Ours")) +
labs(
y = 'Reads Correctly Classified Per Sample',
x = 'Approach',
title = 'Accuracy of\nClassification Approaches') +
theme(
legend.position = 'none',  # two groups, already labeled, seems redundant?
plot.title = element_text(hjust = 0.5),
axis.text.y = element_text(angle = 45),
panel.grid.major.x = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank()
)
ggplot(ACC_sens_Spec, aes(y = Sp_Acc, x = Method, color = Method), alpha = 0.5) +
#  geom_jitter(width = 0.1, shape = 1) +
geom_violin(trim=FALSE) +
stat_summary(fun.y=median, geom="point", shape = 23, size = 2.5, aes(fill = Method)) +
# stat_boxplot(#
#    notch = T, notchwidth = 0.75,
#    varwidth = T) +
expand_limits(y = min_v - 5) + # expand the plot so we can fit sample size
theme_bw() +
scale_colour_manual(values = c('#F4AFB4', '#94A89A')) +
scale_y_continuous(labels = scales::percent_format(scale = 1), limits = c(0,100)) + # % symbol
scale_x_discrete(labels = c('Naive', "Ours")) +
labs(
y = 'Reads Correctly Classified By Sample',
x = 'Approach',
title = 'Accuracy of\nClassification Approaches') +
theme(
legend.position = 'none',  # two groups, already labeled, seems redundant?
plot.title = element_text(hjust = 0.5),
axis.text.y = element_text(angle = 45),
panel.grid.major.x = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank()
)
ggplot(ACC_sens_Spec, aes(y = Sp_Acc, x = Method, color = Method), alpha = 0.5) +
#  geom_jitter(width = 0.1, shape = 1) +
geom_violin(trim=FALSE) +
stat_summary(fun.y=median, geom="point", shape = 23, size = 2.5, aes(fill = Method)) +
# stat_boxplot(#
#    notch = T, notchwidth = 0.75,
#    varwidth = T) +
expand_limits(y = min_v - 5) + # expand the plot so we can fit sample size
theme_bw() +
scale_colour_manual(values = c('#F4AFB4', '#94A89A')) +
scale_y_continuous(labels = scales::percent_format(scale = 1), limits = c(0,100)) + # % symbol
scale_x_discrete(labels = c('Naive', "Ours")) +
labs(
y = 'Reads Correctly Classified by Sample',
x = 'Approach',
title = 'Accuracy of\nClassification Approaches') +
theme(
legend.position = 'none',  # two groups, already labeled, seems redundant?
plot.title = element_text(hjust = 0.5),
axis.text.y = element_text(angle = 45),
panel.grid.major.x = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank()
)
ggsave('Accuracy_BLAST.png')
rm(ACC_sens_Spec, my_comparisons, my_means, sample_sizes, min_v)
ggsave('Accuracy_BLAST.png')
??ggsave
ggsave('Accuracy_BLAST.png', width = 5, height = 5)
ggsave('Accuracy_BLAST.png', width = 3.5, height = 3.5)
setwd("~/Documents/ManuSCript/script")
read.csv('../data/Bombus_queen_observations_2015-2022.csv')
dat <- read.csv('../data/Bombus_queen_observations_2015-2022.csv')
View(dat)
library(tidyverse)
dat <- read.csv('../data/Bombus_queen_observations_2015-2022.csv') %>%
filter(year < 2021)
View(dat)
dat <- read.csv('../data/Bombus_queen_observations_2015-2022.csv') %>%
filter(year < 2021, resource.coll != 'pollen')
View(dat)
dat <- read.csv('../data/Bombus_queen_observations_2015-2022.csv') %>%
filter(year < 2021 & resource.coll != 'pollen')
table(dat$resource.coll)
dat <- read.csv('../data/Bombus_queen_observations_2015-2022.csv') %>%
filter(year < 2021 & resource.coll != 'nectar')
table(dat$resource.coll)
dat <- read.csv('../data/Bombus_queen_observations_2015-2022.csv') %>%
filter(year < 2021 & resource.coll != 'nectar')
View(dat)
pl_stats <- dat %>%
select(plant.species) %>%
separate(plant.species, 'genus', 'species')
View(pl_stats)
?separate
pl_stats <- dat %>%
select(plant.species) %>%
separate(plant.species, c('genus', 'species'))
pl_stats <- dat %>%
select(plant.species) %>%
separate(plant.species, c('genus', 'species')) %>%
distinct(genus)
View(pl_stats)
View(pl_stats)
pl_stats <- dat %>%
select(plant.species) %>%
separate(plant.species, c('genus', 'species'), remove = F) %>%
distinct(genus)
pl_stats %>%
distinct(genus)
pl_stats %>%
distinct(genus) %>%
nrow()
pl_stats %>%
distinct(plant.species)
dat <- read.csv('../data/Bombus_queen_observations_2015-2022.csv') %>%
filter(year < 2021 & resource.coll != 'nectar')
pl_stats <- dat %>%
select(plant.species) %>%
separate(plant.species, c('genus', 'species'), remove = F)
View(pl_stats)
pl_stats %>%
distinct(plant.species)
pl_stats %>%
distinct(plant.species) %>%
nrow(0)
pl_stats %>%
distinct(plant.species) %>%
nrow()
pl_stats %>%
distinct(genus)
spl_stats %>%
mutate(Family = case_when(
genus %in% c('Heracleum', 'Osmorhiza', 'Taraxacum') ~ 'Apiaceae'
genus %in% c('Dugaldia', 'Helianthella', 'Heliomeris', 'Erigeron', 'Senecio') ~ 'Asteraceae',
spl_stats %>%
mutate(Family = case_when(
genus %in% c('Heracleum', 'Osmorhiza', 'Taraxacum') ~ 'Apiaceae',
genus %in% c('Dugaldia', 'Helianthella', 'Heliomeris', 'Erigeron', 'Senecio') ~ 'Asteraceae',
genus %in% c('Mertensia') ~ 'Boraginaceae',
genus %in% c('Calochortus' ,'Erythronium') ~ 'Liliaceae',
genus %in% c('Distegia') ~ 'Caprifoliaceae',
genus %in% c('Lathyrus', 'Lupinus', 'Vicia', ) ~ 'Fabaceae',
genus %in% c('Frasera') ~ 'Gentianaceae',
genus %in% c('Hydrophyllum', 'Phacelia') ~ 'Hydrophyllaceae',
genus %in% c('Adenolinum') ~ 'Linaceae',
genus %in% c('Claytona') ~ 'Montiaceae',
genus %in% c('Pedicularis') ~ 'Orobanchaceae',
genus %in% c('Dodecatheon') ~ 'Primulaceae'
genus %in% c('Aconitum', 'Aquilegia', 'Delphinium', 'Thalictrum') ~ 'Ranunculaceae'
spl_stats %>%
mutate(Family = case_when(
genus %in% c('Heracleum', 'Osmorhiza', 'Taraxacum') ~ 'Apiaceae',
genus %in% c('Dugaldia', 'Helianthella', 'Heliomeris', 'Erigeron', 'Senecio') ~ 'Asteraceae',
genus %in% c('Mertensia') ~ 'Boraginaceae',
genus %in% c('Calochortus' ,'Erythronium') ~ 'Liliaceae',
genus %in% c('Distegia') ~ 'Caprifoliaceae',
genus %in% c('Lathyrus', 'Lupinus', 'Vicia', ) ~ 'Fabaceae',
genus %in% c('Frasera') ~ 'Gentianaceae',
genus %in% c('Hydrophyllum', 'Phacelia') ~ 'Hydrophyllaceae',
genus %in% c('Adenolinum') ~ 'Linaceae',
genus %in% c('Claytona') ~ 'Montiaceae',
genus %in% c('Pedicularis') ~ 'Orobanchaceae',
genus %in% c('Dodecatheon') ~ 'Primulaceae',
genus %in% c('Aconitum', 'Aquilegia', 'Delphinium', 'Thalictrum') ~ 'Ranunculaceae'
genus %in% c('Erythrocoma', 'Rubus', 'Pentaphylloides', 'Rosa', 'Potentilla') ~ 'Rosaceae'
spl_stats %>%
mutate(Family = case_when(
genus %in% c('Heracleum', 'Osmorhiza', 'Taraxacum') ~ 'Apiaceae',
genus %in% c('Dugaldia', 'Helianthella', 'Heliomeris', 'Erigeron', 'Senecio') ~ 'Asteraceae',
genus %in% c('Mertensia') ~ 'Boraginaceae',
genus %in% c('Calochortus' ,'Erythronium') ~ 'Liliaceae',
genus %in% c('Distegia') ~ 'Caprifoliaceae',
genus %in% c('Lathyrus', 'Lupinus', 'Vicia', ) ~ 'Fabaceae',
genus %in% c('Frasera') ~ 'Gentianaceae',
genus %in% c('Hydrophyllum', 'Phacelia') ~ 'Hydrophyllaceae',
genus %in% c('Adenolinum') ~ 'Linaceae',
genus %in% c('Claytona') ~ 'Montiaceae',
genus %in% c('Pedicularis') ~ 'Orobanchaceae',
genus %in% c('Dodecatheon') ~ 'Primulaceae',
genus %in% c('Aconitum', 'Aquilegia', 'Delphinium', 'Thalictrum') ~ 'Ranunculaceae',
genus %in% c('Erythrocoma', 'Rubus', 'Pentaphylloides', 'Rosa', 'Potentilla') ~ 'Rosaceae',
genus %in% c('Salix') ~ 'Salicaceae'
))
pl_stats %>%
mutate(Family = case_when(
genus %in% c('Heracleum', 'Osmorhiza', 'Taraxacum') ~ 'Apiaceae',
genus %in% c('Dugaldia', 'Helianthella', 'Heliomeris', 'Erigeron', 'Senecio') ~ 'Asteraceae',
genus %in% c('Mertensia') ~ 'Boraginaceae',
genus %in% c('Calochortus' ,'Erythronium') ~ 'Liliaceae',
genus %in% c('Distegia') ~ 'Caprifoliaceae',
genus %in% c('Lathyrus', 'Lupinus', 'Vicia', ) ~ 'Fabaceae',
genus %in% c('Frasera') ~ 'Gentianaceae',
genus %in% c('Hydrophyllum', 'Phacelia') ~ 'Hydrophyllaceae',
genus %in% c('Adenolinum') ~ 'Linaceae',
genus %in% c('Claytona') ~ 'Montiaceae',
genus %in% c('Pedicularis') ~ 'Orobanchaceae',
genus %in% c('Dodecatheon') ~ 'Primulaceae',
genus %in% c('Aconitum', 'Aquilegia', 'Delphinium', 'Thalictrum') ~ 'Ranunculaceae',
genus %in% c('Erythrocoma', 'Rubus', 'Pentaphylloides', 'Rosa', 'Potentilla') ~ 'Rosaceae',
genus %in% c('Salix') ~ 'Salicaceae'
))
pl_stats %>%
mutate(Family = case_when(
genus %in% c('Heracleum', 'Osmorhiza', 'Taraxacum') ~ 'Apiaceae',
genus %in% c('Dugaldia', 'Helianthella', 'Heliomeris', 'Erigeron', 'Senecio') ~ 'Asteraceae',
genus %in% c('Mertensia') ~ 'Boraginaceae',
genus %in% c('Calochortus' ,'Erythronium') ~ 'Liliaceae',
genus %in% c('Distegia') ~ 'Caprifoliaceae',
genus %in% c('Lathyrus', 'Lupinus', 'Vicia', ) ~ 'Fabaceae',
genus %in% c('Frasera') ~ 'Gentianaceae',
genus %in% c('Hydrophyllum', 'Phacelia') ~ 'Hydrophyllaceae',
genus %in% c('Adenolinum') ~ 'Linaceae',
genus %in% c('Claytona') ~ 'Montiaceae',
genus %in% c('Pedicularis') ~ 'Orobanchaceae',
genus %in% c('Dodecatheon') ~ 'Primulaceae',
genus %in% c('Aconitum', 'Aquilegia', 'Delphinium', 'Thalictrum') ~ 'Ranunculaceae',
genus %in% c('Erythrocoma', 'Rubus', 'Pentaphylloides', 'Rosa', 'Potentilla') ~ 'Rosaceae',
genus %in% c('Salix') ~ 'Salicaceae'
))
rlang::last_trace()
pl_stats %>%
mutate(Family = case_when(
genus %in% c('Heracleum', 'Osmorhiza', 'Taraxacum') ~ 'Apiaceae',
genus %in% c('Dugaldia', 'Helianthella', 'Heliomeris', 'Erigeron', 'Senecio') ~ 'Asteraceae',
genus %in% c('Mertensia') ~ 'Boraginaceae',
genus %in% c('Calochortus' ,'Erythronium') ~ 'Liliaceae',
genus %in% c('Distegia') ~ 'Caprifoliaceae',
genus %in% c('Lathyrus', 'Lupinus', 'Vicia' ) ~ 'Fabaceae',
genus %in% c('Frasera') ~ 'Gentianaceae',
genus %in% c('Hydrophyllum', 'Phacelia') ~ 'Hydrophyllaceae',
genus %in% c('Adenolinum') ~ 'Linaceae',
genus %in% c('Claytona') ~ 'Montiaceae',
genus %in% c('Pedicularis') ~ 'Orobanchaceae',
genus %in% c('Dodecatheon') ~ 'Primulaceae',
genus %in% c('Aconitum', 'Aquilegia', 'Delphinium', 'Thalictrum') ~ 'Ranunculaceae',
genus %in% c('Erythrocoma', 'Rubus', 'Pentaphylloides', 'Rosa', 'Potentilla') ~ 'Rosaceae',
genus %in% c('Salix') ~ 'Salicaceae'
))
pl_stats %>%
mutate(Family = case_when(
genus %in% c('Heracleum', 'Osmorhiza', 'Taraxacum') ~ 'Apiaceae',
genus %in% c('Dugaldia', 'Helianthella', 'Heliomeris', 'Erigeron', 'Senecio') ~ 'Asteraceae',
genus %in% c('Mertensia') ~ 'Boraginaceae',
genus %in% c('Calochortus' ,'Erythronium') ~ 'Liliaceae',
genus %in% c('Distegia') ~ 'Caprifoliaceae',
genus %in% c('Lathyrus', 'Lupinus', 'Vicia' ) ~ 'Fabaceae',
genus %in% c('Frasera') ~ 'Gentianaceae',
genus %in% c('Hydrophyllum', 'Phacelia') ~ 'Hydrophyllaceae',
genus %in% c('Adenolinum') ~ 'Linaceae',
genus %in% c('Claytona') ~ 'Montiaceae',
genus %in% c('Pedicularis') ~ 'Orobanchaceae',
genus %in% c('Dodecatheon') ~ 'Primulaceae',
genus %in% c('Aconitum', 'Aquilegia', 'Delphinium', 'Thalictrum') ~ 'Ranunculaceae',
genus %in% c('Erythrocoma', 'Rubus', 'Pentaphylloides', 'Rosa', 'Potentilla') ~ 'Rosaceae',
genus %in% c('Salix') ~ 'Salicaceae'
)) %>%
distinct(Family)
View(pl_stats)
View(dat)
dat %>%
select(genus, species, plant.species)
dat %>%
select(genus, species, plant.species) %>%
distinct()
dat %>%
select(genus, species, plant.species) %>%
distinct() %>%
group_by(species)
dat %>%
select(genus, species, plant.species) %>%
distinct() %>%
group_by(species) %>%
count()
dat %>%
select(genus, species, plant.species) %>%
distinct() %>%
group_by(species) %>%
count() %>%
pull(n)
dat %>%
select(genus, species, plant.species) %>%
distinct() %>%
group_by(species) %>%
count() #%>%
dat %>%
select(genus, species, plant.species) %>%
distinct() %>%
filter(species %in% c('nevadensis', 'californicus', 'appositus', 'flavifrons', 'rufocinctus', 'mixtus', 'bifarius'))
commonCrestedButteBees <- c('nevadensis', 'californicus', 'appositus', 'flavifrons', 'rufocinctus', 'mixtus', 'bifarius')
dat <- read.csv('../data/Bombus_queen_observations_2015-2022.csv') %>%
filter(year < 2021 & resource.coll != 'nectar', species %in% commonCrestedButteBees)
dat %>%
select(genus, species, plant.species) %>%
distinct() %>%
filter(species %in% c('nevadensis', 'californicus', 'appositus', 'flavifrons', 'rufocinctus', 'mixtus', 'bifarius'))
dat %>%
select(genus, species, plant.species) %>%
distinct() %>%
filter(species %in% c('nevadensis', 'californicus', 'appositus', 'flavifrons', 'rufocinctus', 'mixtus', 'bifarius')) %>%
group_by(species) %>%
count() #%>%
pl_stats <- dat %>%
select(plant.species) %>%
separate(plant.species, c('genus', 'species'), remove = F)
pl_stats %>%
distinct(plant.species) %>%
nrow()
pl_stats %>%  # no of genera by Weber
distinct(genus) %>%
nrow()
pl_stats %>%
distinct(genus)
pl_stats %>%
mutate(Family = case_when(
genus %in% c('Heracleum', 'Osmorhiza', 'Taraxacum') ~ 'Apiaceae',
genus %in% c('Dugaldia', 'Helianthella', 'Heliomeris', 'Erigeron', 'Senecio') ~ 'Asteraceae',
genus %in% c('Mertensia') ~ 'Boraginaceae',
genus %in% c('Calochortus' ,'Erythronium') ~ 'Liliaceae',
genus %in% c('Distegia') ~ 'Caprifoliaceae',
genus %in% c('Lathyrus', 'Lupinus', 'Vicia' ) ~ 'Fabaceae',
genus %in% c('Frasera') ~ 'Gentianaceae',
genus %in% c('Hydrophyllum', 'Phacelia') ~ 'Hydrophyllaceae',
genus %in% c('Adenolinum') ~ 'Linaceae',
genus %in% c('Claytona') ~ 'Montiaceae',
genus %in% c('Pedicularis') ~ 'Orobanchaceae',
genus %in% c('Dodecatheon') ~ 'Primulaceae',
genus %in% c('Aconitum', 'Aquilegia', 'Delphinium', 'Thalictrum') ~ 'Ranunculaceae',
genus %in% c('Erythrocoma', 'Rubus', 'Pentaphylloides', 'Rosa', 'Potentilla') ~ 'Rosaceae',
genus %in% c('Salix') ~ 'Salicaceae'
)) %>%
distinct(Family)
dat %>%
select(genus, species, plant.species) %>%
distinct() %>%
filter(species %in% c('nevadensis', 'californicus', 'appositus', 'flavifrons', 'rufocinctus', 'mixtus', 'bifarius')) %>%
group_by(species) %>%
count() #%>%
dat %>%
select(genus, species, plant.species) %>%
distinct() %>%
filter(species %in% c('nevadensis', 'californicus', 'appositus', 'flavifrons', 'rufocinctus', 'mixtus', 'bifarius')) %>%
group_by(species) %>%
count() %>%
pull(n)
dat %>%
select(genus, species, plant.species) %>%
distinct() %>%
filter(species %in% c('nevadensis', 'californicus', 'appositus', 'flavifrons', 'rufocinctus', 'mixtus', 'bifarius')) %>%
group_by(species) %>%
count() %>%
pull(n) %>%
mean()
dat %>%
select(genus, species, plant.species) %>%
distinct() %>%
filter(species %in% c('nevadensis', 'californicus', 'appositus', 'flavifrons', 'rufocinctus', 'mixtus', 'bifarius')) %>%
group_by(species) %>%
count() %>%
pull(n) %>%
median()
setwd('~/Documents/ManuSCript/script')
library(tidyverse)
pmorpho <- read.csv('../data/morpho_pollen.csv') %>%
filter(caste == 'q') %>%  # reduce to queens only here, use this as the filtering join later
select(Sample = sample.id, Bee_spp = species, Site = site, Date = date,
Plant_spp_morpho = morphotype, Count = sum ) %>%
mutate(Observation = 'Microscopy')
site_info <- select(pmorpho,   Sample, Bee_spp, Site, Date) %>%
distinct()
morpho_lkp <- read.csv('../data/pollen_morphotype_grp_lookup.csv') %>%
mutate(morphotype = str_to_upper(morphotype))
blst <- read.csv('../data/Post_Classified_BLAST_sqs.csv') %>%
group_by(Sample) %>%
slice_max(Prcnt_seqs, n = 10) %>% # reduce to the top 10 records
ungroup() %>%
select(Sample, Plant_spp_morpho = TAXON, Count = Seqs_pr_taxon) %>%
mutate(Observation = 'Molecular') %>%
inner_join(., site_info, by = 'Sample', relationship = "many-to-many")
queen_obs <- read.csv('../data/Bombus_queen_observations_2015.csv') #%>%
queen_obs <- read.csv('../data/Bombus_queen_observations_2015.csv') %>%
select(Bee_spp = species, Site = site, Date = date,
Plant_spp_morpho = plant.species ) %>%
mutate(Bee_spp = str_remove(Bee_spp, '[.]orange|[.]dark'),
Plant_spp_morpho = str_replace(Plant_spp_morpho, '[.]', ' '),
Date = as.character(lubridate::dmy(Date)))  %>%
count(Bee_spp, Site, Date, Plant_spp_morpho, name = 'Count') %>%
mutate(Observation = 'Field', Sample = NA) %>%
mutate(
Plant_spp_morpho = str_replace(Plant_spp_morpho, 'leucanthus', 'lanszwertii'),
Plant_spp_morpho = str_replace(Plant_spp_morpho, 'bakeri', 'sericeus'),
Plant_spp_morpho = str_replace(Plant_spp_morpho, 'Adenolinum', 'Linum'),
Plant_spp_morpho = str_replace(Plant_spp_morpho, 'Dugaldia', 'Hymenoxys'),
Plant_spp_morpho = str_replace(Plant_spp_morpho, 'Ligularia', 'Senecio'),
Plant_spp_morpho = str_replace(Plant_spp_morpho, 'Distegia', 'Lonciera'),
Plant_spp_morpho = str_replace(Plant_spp_morpho, 'Erythrocoma triflora', 'Geum trifloum'),
)
all_records <- bind_rows(pmorpho, blst, queen_obs) %>%
arrange(Bee_spp, Site, Date, Observation)
View(all_records)
rm(queen_obs, pmorpho, blst, site_info)
write.csv(all_records, '../data/all_interactions.csv', row.names = F)
