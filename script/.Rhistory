outlier.shape = F, outlier.alpha = 0.8, outlier.colour = 'black') +
geom_jitter(width = 0.1, shape = 1) +
geom_text(data = sample_sizes, # draw samples sizes
aes(Method, Inf, label = n), color = 'black',
vjust = "inward", size = 4,
y = min_v * 0.5) + # note placing sample size below the minimum value
ggpubr::stat_compare_means(comparisons = my_comparisons,
aes(label = ..p.signif..),
tip.length = 0, vjust = 0.25, size = 4) +
expand_limits(y = min_v - 5) + # expand the plot so we can fit sample size
theme_bw() +
scale_colour_manual(values = c('#F4AFB4', '#94A89A')) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) + # % symbol
scale_x_discrete(labels = c('BLAST', 'Post Classification')) +
labs(y = 'Accuracy', title = 'Accuracy of "naive" BLAST & post classification') +
theme(legend.position = 'none',  # two groups, already labeled, seems redundant?
plot.title = element_text(hjust = 0.5))
plot(data = ACC_sens_Spec, x = sample, y = Sp_acc)
plot(data = ACC_sens_Spec, x = sample, y = Sp_Acc)
plot(data = ACC_sens_Spec, x = Sample, y = Sp_Acc)
plot(x = ACC_sens_Spec$Sample, y = ACC_sens_Spec$Sp_Acc)
plot(x = ACC_sens_Spec$Sample, y = ACC_sens_Spec$Sp_Acc, fill = ACC_sens_Spec$Method)
plot(x = ACC_sens_Spec$Sample, y = ACC_sens_Spec$Sp_Acc, color = ACC_sens_Spec$Method)
ggplot() +
geom_point(aes(x = Sample, y = Sp_Acc, fill = Method))
ggplot() +
geom_point(aes(x = Sample, y = Sp_Acc, color = Method))
ggplot(data = ACC_sens_Spec) +
geom_point(aes(x = Sample, y = Sp_Acc, color = Method))
View(ACC_sens_Spec)
ACC_sens_Spec <- bind_rows(
mutate(blast_results, Method = 'BLAST'),
mutate(computer_results, Method  = 'COMP')
) %>%
left_join(., spp_count) %>%
left_join(., gen_count) %>%
left_join(., fam_count) %>%
left_join(., cnts, by = c('Sample', 'Method')) %>%
rowwise() %>%
mutate(
Species_false = NO_Species - Species_T,
Sp_Acc = (Species_T / NO_Species) * 100,
#    Gen_Acc = (Genera_T / sum(NO_Genus, NO_Species, na.rm = T) ) * 100,
Sp_Sens = (Species_T)  / (Species_T + (Spp_No - Species_T)) * 100
) %>%
select(Sample, Method, NO_Species, Species_T, Sp_Acc )
ggplot(data = ACC_sens_Spec) +
geom_point(aes(x = Sample, y = Sp_Acc, color = Method))
View(ACC_sens_Spec)
blast <- read.csv('../data/tally_blast_classifications.csv') %>%
group_by(Sample) %>%
slice_max(Prcnt_seqs, n = 10) %>%
select(Sample, Taxon = taxid, Percent_Sample = Prcnt_seqs) %>%
mutate(
Taxon = str_replace(Taxon, 'Arenaria', 'Eremogone'),
Genus = str_remove(str_extract(Taxon, '^.* '), ' '),
Method = 'BLAST')
automated <- read.csv('../data/Post_Classified_BLAST_sqs.csv') %>%
group_by(Sample, TAXON_NEW) %>%
mutate(Prcnt_seqs = sum(Prcnt_seqs)) %>%
drop_na() %>%
distinct(Sample, TAXON_NEW, .keep_all = T) %>%
ungroup(TAXON_NEW) %>%
slice_max(Prcnt_seqs, n = 10) %>%
select(Sample, Genus = GENUS, Taxon = TAXON_NEW, Percent_Sample = Prcnt_seqs) %>%
mutate(across(where(is.character), ~ str_replace(., 'Arenaria', 'Eremogone')),
Method = 'Automated')
View(automated)
expert <- read.csv('../data/Fully_Integrated_Corbiculae.csv') %>%
rename(Sample = sample.id) %>%
mutate(across(where(is.character), ~ str_trim(.)),
Method = 'Expert') %>%
drop_na() %>%
relocate()
View(expert)
blast <- read.csv('../data/tally_blast_classifications.csv') %>%
group_by(Sample) %>%
slice_max(Prcnt_seqs, n = 10) %>%
select(Sample, Taxon = taxid, Percent_Sample = Prcnt_seqs) %>%
mutate(
Taxon = str_replace(Taxon, 'Arenaria', 'Eremogone'),
Genus = str_remove(str_extract(Taxon, '^.* '), ' '),
Method = 'BLAST')
automated <- read.csv('../data/Post_Classified_BLAST_sqs.csv') %>%
group_by(Sample, TAXON_NEW) %>%
mutate(Prcnt_seqs = sum(Prcnt_seqs)) %>%
drop_na() %>%
distinct(Sample, TAXON_NEW, .keep_all = T) %>%
ungroup(TAXON_NEW) %>%
slice_max(Prcnt_seqs, n = 10) %>%
select(Sample, Genus = GENUS, Taxon = TAXON_NEW, Percent_Sample = Prcnt_seqs) %>%
mutate(across(where(is.character), ~ str_replace(., 'Arenaria', 'Eremogone')),
Method = 'Automated')
expert <- read.csv('../data/Fully_Integrated_Corbiculae.csv') %>%
rename(Sample = sample.id) %>%
mutate(across(where(is.character), ~ str_trim(.)),
Method = 'Expert') %>%
drop_na() %>%
relocate()
View(blast)
View(computer_results)
View(blast_results)
View(ACC_sens_Spec)
ACC_sens_Spec <- bind_rows(
mutate(blast_results, Method = 'BLAST'),
mutate(computer_results, Method  = 'COMP')
) %>%
left_join(., spp_count) %>%
left_join(., gen_count) %>%
left_join(., fam_count) %>%
left_join(., cnts, by = c('Sample', 'Method')) %>%
rowwise() %>%
mutate(
Species_false = NO_Species - Species_T,
Sp_Acc = (Species_T / NO_Species) * 100,
#    Gen_Acc = (Genera_T / sum(NO_Genus, NO_Species, na.rm = T) ) * 100,
Sp_Sens = (Species_T)  / (Species_T + (Spp_No - Species_T)) * 100
) #%>%
ACC_sens_Spec <- bind_rows(
mutate(blast_results, Method = 'BLAST'),
mutate(computer_results, Method  = 'COMP')
) %>%
left_join(., spp_count) %>%
left_join(., gen_count) %>%
left_join(., fam_count) %>%
left_join(., cnts, by = c('Sample', 'Method')) %>%
rowwise() %>%
mutate(
Species_false = NO_Species - Species_T,
Sp_Acc = (Species_T / Spp_No) * 100,
#    Gen_Acc = (Genera_T / sum(NO_Genus, NO_Species, na.rm = T) ) * 100,
Sp_Sens = (Species_T)  / (Species_T + (Spp_No - Species_T)) * 100
) #%>%
my_means <- ggpubr::compare_means(Sp_Acc ~ Method,  data = ACC_sens_Spec, method = "wilcox.test") # here we perform wilcox again in ggpubr format for display on plot.
my_comparisons <- my_means %>%
nest(groups = c(group1, group2)) %>%
pull(groups) %>%
map(., as.character) # this is fed into ggpubr to draw the significance bar between
sample_sizes <- ACC_sens_Spec %>%
dplyr::group_by(Method) %>%
dplyr::tally() %>%
dplyr::mutate(n = paste0('n = ', n)) # we are grabbing the sample size for each of the paired populations... because they are paired, maybe only need once?
min_v <- dplyr::summarise(ACC_sens_Spec, mean_mpg = floor(min(Sp_Acc))) |>
pull() |> min() # this is the lowest value of accuracy which is found in the data set.
ggplot(ACC_sens_Spec, aes(y = Sp_Acc,  x = Method, color = Method), alpha = 0.5) +
stat_boxplot(notch = T, notchwidth = 0.75,
varwidth = T,
outlier.shape = F, outlier.alpha = 0.8, outlier.colour = 'black') +
geom_jitter(width = 0.1, shape = 1) +
geom_text(data = sample_sizes, # draw samples sizes
aes(Method, Inf, label = n), color = 'black',
vjust = "inward", size = 4,
y = min_v * 0.5) + # note placing sample size below the minimum value
ggpubr::stat_compare_means(comparisons = my_comparisons,
aes(label = ..p.signif..),
tip.length = 0, vjust = 0.25, size = 4) +
expand_limits(y = min_v - 5) + # expand the plot so we can fit sample size
theme_bw() +
scale_colour_manual(values = c('#F4AFB4', '#94A89A')) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) + # % symbol
scale_x_discrete(labels = c('BLAST', 'Post Classification')) +
labs(y = 'Accuracy', title = 'Accuracy of "naive" BLAST & post classification') +
theme(legend.position = 'none',  # two groups, already labeled, seems redundant?
plot.title = element_text(hjust = 0.5))
ACC_sens_Spec <- bind_rows(
mutate(blast_results, Method = 'BLAST'),
mutate(computer_results, Method  = 'COMP')
) %>%
left_join(., spp_count) %>%
left_join(., gen_count) %>%
left_join(., fam_count) %>%
left_join(., cnts, by = c('Sample', 'Method')) %>%
rowwise() %>%
mutate(
Species_false = NO_Species - Species_T,
Sp_Acc = ((Species_T - Spp_No) / Species_T) * 100,
#    Gen_Acc = (Genera_T / sum(NO_Genus, NO_Species, na.rm = T) ) * 100,
Sp_Sens = (Species_T)  / (Species_T + (Spp_No - Species_T)) * 100
) #%>%
my_means <- ggpubr::compare_means(Sp_Acc ~ Method,  data = ACC_sens_Spec, method = "wilcox.test") # here we perform wilcox again in ggpubr format for display on plot.
my_comparisons <- my_means %>%
nest(groups = c(group1, group2)) %>%
pull(groups) %>%
map(., as.character) # this is fed into ggpubr to draw the significance bar between
sample_sizes <- ACC_sens_Spec %>%
dplyr::group_by(Method) %>%
dplyr::tally() %>%
dplyr::mutate(n = paste0('n = ', n)) # we are grabbing the sample size for each of the paired populations... because they are paired, maybe only need once?
min_v <- dplyr::summarise(ACC_sens_Spec, mean_mpg = floor(min(Sp_Acc))) |>
pull() |> min() # this is the lowest value of accuracy which is found in the data set.
ggplot(ACC_sens_Spec, aes(y = Sp_Acc,  x = Method, color = Method), alpha = 0.5) +
stat_boxplot(notch = T, notchwidth = 0.75,
varwidth = T,
outlier.shape = F, outlier.alpha = 0.8, outlier.colour = 'black') +
geom_jitter(width = 0.1, shape = 1) +
geom_text(data = sample_sizes, # draw samples sizes
aes(Method, Inf, label = n), color = 'black',
vjust = "inward", size = 4,
y = min_v * 0.5) + # note placing sample size below the minimum value
ggpubr::stat_compare_means(comparisons = my_comparisons,
aes(label = ..p.signif..),
tip.length = 0, vjust = 0.25, size = 4) +
expand_limits(y = min_v - 5) + # expand the plot so we can fit sample size
theme_bw() +
scale_colour_manual(values = c('#F4AFB4', '#94A89A')) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) + # % symbol
scale_x_discrete(labels = c('BLAST', 'Post Classification')) +
labs(y = 'Accuracy', title = 'Accuracy of "naive" BLAST & post classification') +
theme(legend.position = 'none',  # two groups, already labeled, seems redundant?
plot.title = element_text(hjust = 0.5))
ggsave( '../graphics/plots/Accuracy_BLAST.png')
ACC_sens_Spec <- bind_rows(
mutate(blast_results, Method = 'BLAST'),
mutate(computer_results, Method  = 'COMP')
) %>%
left_join(., spp_count) %>%
left_join(., gen_count) %>%
left_join(., fam_count) %>%
left_join(., cnts, by = c('Sample', 'Method')) %>%
rowwise() %>%
mutate(
Species_false = NO_Species - Species_T,
Sp_Acc = ((Spp_No - Species_T) / Spp_No) * 100,
#    Gen_Acc = (Genera_T / sum(NO_Genus, NO_Species, na.rm = T) ) * 100,
Sp_Sens = (Species_T)  / (Species_T + (Spp_No - Species_T)) * 100
) #%>%
wilcox.test(
pull(ACC_sens_Spec[ACC_sens_Spec$Method == 'COMP', 'Sp_Acc']) ,
pull(ACC_sens_Spec[ACC_sens_Spec$Method == 'BLAST', 'Sp_Acc']),
alternative = "greater"
) # a weird thing, i oftentimes compare values from different fns.
my_means <- ggpubr::compare_means(Sp_Acc ~ Method,  data = ACC_sens_Spec, method = "wilcox.test") # here we perform wilcox again in ggpubr format for display on plot.
my_comparisons <- my_means %>%
nest(groups = c(group1, group2)) %>%
pull(groups) %>%
map(., as.character) # this is fed into ggpubr to draw the significance bar between
sample_sizes <- ACC_sens_Spec %>%
dplyr::group_by(Method) %>%
dplyr::tally() %>%
dplyr::mutate(n = paste0('n = ', n)) # we are grabbing the sample size for each of the paired populations... because they are paired, maybe only need once?
min_v <- dplyr::summarise(ACC_sens_Spec, mean_mpg = floor(min(Sp_Acc))) |>
pull() |> min() # this is the lowest value of accuracy which is found in the data set.
ggplot(ACC_sens_Spec, aes(y = Sp_Acc,  x = Method, color = Method), alpha = 0.5) +
stat_boxplot(notch = T, notchwidth = 0.75,
varwidth = T,
outlier.shape = F, outlier.alpha = 0.8, outlier.colour = 'black') +
geom_jitter(width = 0.1, shape = 1) +
geom_text(data = sample_sizes, # draw samples sizes
aes(Method, Inf, label = n), color = 'black',
vjust = "inward", size = 4,
y = min_v * 0.5) + # note placing sample size below the minimum value
ggpubr::stat_compare_means(comparisons = my_comparisons,
aes(label = ..p.signif..),
tip.length = 0, vjust = 0.25, size = 4) +
expand_limits(y = min_v - 5) + # expand the plot so we can fit sample size
theme_bw() +
scale_colour_manual(values = c('#F4AFB4', '#94A89A')) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) + # % symbol
scale_x_discrete(labels = c('BLAST', 'Post Classification')) +
labs(y = 'Accuracy', title = 'Accuracy of "naive" BLAST & post classification') +
theme(legend.position = 'none',  # two groups, already labeled, seems redundant?
plot.title = element_text(hjust = 0.5))
ACC_sens_Spec <- bind_rows(
mutate(blast_results, Method = 'BLAST'),
mutate(computer_results, Method  = 'COMP')
) %>%
left_join(., spp_count) %>%
left_join(., gen_count) %>%
left_join(., fam_count) %>%
left_join(., cnts, by = c('Sample', 'Method')) %>%
rowwise() %>%
mutate(
Species_false = NO_Species - Species_T,
Sp_Acc = (Species_T / Spp_No) * 100,
#    Gen_Acc = (Genera_T / sum(NO_Genus, NO_Species, na.rm = T) ) * 100,
Sp_Sens = (Species_T)  / (Species_T + (Spp_No - Species_T)) * 100
) #%>%
my_means <- ggpubr::compare_means(Sp_Acc ~ Method,  data = ACC_sens_Spec, method = "wilcox.test") # here we perform wilcox again in ggpubr format for display on plot.
my_comparisons <- my_means %>%
nest(groups = c(group1, group2)) %>%
pull(groups) %>%
map(., as.character) # this is fed into ggpubr to draw the significance bar between
sample_sizes <- ACC_sens_Spec %>%
dplyr::group_by(Method) %>%
dplyr::tally() %>%
dplyr::mutate(n = paste0('n = ', n)) # we are grabbing the sample size for each of the paired populations... because they are paired, maybe only need once?
min_v <- dplyr::summarise(ACC_sens_Spec, mean_mpg = floor(min(Sp_Acc))) |>
pull() |> min() # this is the lowest value of accuracy which is found in the data set.
ggplot(ACC_sens_Spec, aes(y = Sp_Acc,  x = Method, color = Method), alpha = 0.5) +
stat_boxplot(notch = T, notchwidth = 0.75,
varwidth = T,
outlier.shape = F, outlier.alpha = 0.8, outlier.colour = 'black') +
geom_jitter(width = 0.1, shape = 1) +
geom_text(data = sample_sizes, # draw samples sizes
aes(Method, Inf, label = n), color = 'black',
vjust = "inward", size = 4,
y = min_v * 0.5) + # note placing sample size below the minimum value
ggpubr::stat_compare_means(comparisons = my_comparisons,
aes(label = ..p.signif..),
tip.length = 0, vjust = 0.25, size = 4) +
expand_limits(y = min_v - 5) + # expand the plot so we can fit sample size
theme_bw() +
scale_colour_manual(values = c('#F4AFB4', '#94A89A')) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) + # % symbol
scale_x_discrete(labels = c('BLAST', 'Post Classification')) +
labs(y = 'Accuracy', title = 'Accuracy of "naive" BLAST & post classification') +
theme(legend.position = 'none',  # two groups, already labeled, seems redundant?
plot.title = element_text(hjust = 0.5))
ACC_sens_Spec <- bind_rows(
mutate(blast_results, Method = 'BLAST'),
mutate(computer_results, Method  = 'COMP')
) %>%
left_join(., spp_count) %>%
left_join(., gen_count) %>%
left_join(., fam_count) %>%
left_join(., cnts, by = c('Sample', 'Method')) %>%
rowwise() %>%
mutate(
Species_false = NO_Species - Species_T,
Sp_Acc = (Species_T / Spp_No) * 100,
#    Gen_Acc = (Genera_T / sum(NO_Genus, NO_Species, na.rm = T) ) * 100,
Sp_Sens = (Species_T)  / (Species_T + (Spp_No - Species_T)) * 100
) #%>%
my_means <- ggpubr::compare_means(Sp_Acc ~ Method,  data = ACC_sens_Spec, method = "wilcox.test") # here we perform wilcox again in ggpubr format for display on plot.
my_comparisons <- my_means %>%
nest(groups = c(group1, group2)) %>%
pull(groups) %>%
map(., as.character) # this is fed into ggpubr to draw the significance bar between
sample_sizes <- ACC_sens_Spec %>%
dplyr::group_by(Method) %>%
dplyr::tally() %>%
dplyr::mutate(n = paste0('n = ', n)) # we are grabbing the sample size for each of the paired populations... because they are paired, maybe only need once?
min_v <- dplyr::summarise(ACC_sens_Spec, mean_mpg = floor(min(Sp_Acc))) |>
pull() |> min() # this is the lowest value of accuracy which is found in the data set.
ggplot(ACC_sens_Spec, aes(y = Sp_Acc,  x = Method, color = Method), alpha = 0.5) +
stat_boxplot(notch = T, notchwidth = 0.75,
varwidth = T,
outlier.shape = F, outlier.alpha = 0.8, outlier.colour = 'black') +
geom_jitter(width = 0.1, shape = 1) +
geom_text(data = sample_sizes, # draw samples sizes
aes(Method, Inf, label = n), color = 'black',
vjust = "inward", size = 4,
y = min_v * 0.5) + # note placing sample size below the minimum value
ggpubr::stat_compare_means(comparisons = my_comparisons,
aes(label = ..p.signif..),
tip.length = 0, vjust = 0.25, size = 4) +
expand_limits(y = min_v - 5) + # expand the plot so we can fit sample size
theme_bw() +
scale_colour_manual(values = c('#F4AFB4', '#94A89A')) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) + # % symbol
scale_x_discrete(labels = c('BLAST', 'Post Classification')) +
labs(y = 'Accuracy', title = 'Accuracy of "naive" BLAST & post classification') +
theme(legend.position = 'none',  # two groups, already labeled, seems redundant?
plot.title = element_text(hjust = 0.5))
View(ACC_sens_Spec)
ACC_sens_Spec <- bind_rows(
mutate(blast_results, Method = 'BLAST'),
mutate(computer_results, Method  = 'COMP')
) %>%
left_join(., spp_count) %>%
left_join(., gen_count) %>%
left_join(., fam_count) %>%
left_join(., cnts, by = c('Sample', 'Method')) %>%
rowwise() %>%
mutate(
Species_false = NO_Species - Species_T,
Sp_Sens = (Species_T / Spp_No) * 100,
Sp_Prec = (Species_T / (Species_T + Species_F)) * 100
) #%>%
ggplot(ACC_sens_Spec, aes(y = Sp_Prec,  x = Method, color = Method), alpha = 0.5) +
stat_boxplot(notch = T, notchwidth = 0.75,
varwidth = T,
outlier.shape = F, outlier.alpha = 0.8, outlier.colour = 'black') +
geom_jitter(width = 0.1, shape = 1) +
geom_text(data = sample_sizes, # draw samples sizes
aes(Method, Inf, label = n), color = 'black',
vjust = "inward", size = 4,
y = min_v * 0.5) + # note placing sample size below the minimum value
ggpubr::stat_compare_means(comparisons = my_comparisons,
aes(label = ..p.signif..),
tip.length = 0, vjust = 0.25, size = 4) +
expand_limits(y = min_v - 5) + # expand the plot so we can fit sample size
theme_bw() +
scale_colour_manual(values = c('#F4AFB4', '#94A89A')) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) + # % symbol
scale_x_discrete(labels = c('BLAST', 'Post Classification')) +
labs(y = 'Accuracy', title = 'Accuracy of "naive" BLAST & post classification') +
theme(legend.position = 'none',  # two groups, already labeled, seems redundant?
plot.title = element_text(hjust = 0.5))
fam_count <- expert_f %>%
group_by(Sample) %>%
count(name = 'Fam_No')
ACC_sens_Spec <- bind_rows(
mutate(blast_results, Method = 'BLAST'),
mutate(computer_results, Method  = 'COMP')
) %>%
left_join(., spp_count) %>%
left_join(., gen_count) %>%
left_join(., fam_count) %>%
left_join(., cnts, by = c('Sample', 'Method')) %>%
rowwise() %>%
mutate(
Species_false = NO_Species - Species_T,
Sp_Sens = (Species_T / Spp_No) * 100,
Sp_Prec = (Species_T / (Species_T + Species_F)) * 100,
FDR = (Species_F / (Species_F + Species_T))
) #%>%
wilcox.test(
pull(ACC_sens_Spec[ACC_sens_Spec$Method == 'COMP', 'FDR']) ,
pull(ACC_sens_Spec[ACC_sens_Spec$Method == 'BLAST', 'FDR']),
alternative = "greater"
) # a weird thing, i oftentimes compare values from different fns.
wilcox.test(
pull(ACC_sens_Spec[ACC_sens_Spec$Method == 'COMP', 'FDR']) ,
pull(ACC_sens_Spec[ACC_sens_Spec$Method == 'BLAST', 'FDR']),
alternative = "greater"
) # a weird thing, i oftentimes compare values from different fns.
ggplot(ACC_sens_Spec, aes(y = FDR,  x = Method, color = Method), alpha = 0.5) +
stat_boxplot(notch = T, notchwidth = 0.75,
varwidth = T,
outlier.shape = F, outlier.alpha = 0.8, outlier.colour = 'black') +
geom_jitter(width = 0.1, shape = 1) +
geom_text(data = sample_sizes, # draw samples sizes
aes(Method, Inf, label = n), color = 'black',
vjust = "inward", size = 4,
y = min_v * 0.5) + # note placing sample size below the minimum value
ggpubr::stat_compare_means(comparisons = my_comparisons,
aes(label = ..p.signif..),
tip.length = 0, vjust = 0.25, size = 4) +
expand_limits(y = min_v - 5) + # expand the plot so we can fit sample size
theme_bw() +
scale_colour_manual(values = c('#F4AFB4', '#94A89A')) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) + # % symbol
scale_x_discrete(labels = c('BLAST', 'Post Classification')) +
labs(y = 'Accuracy', title = 'Accuracy of "naive" BLAST & post classification') +
theme(legend.position = 'none',  # two groups, already labeled, seems redundant?
plot.title = element_text(hjust = 0.5))
ACC_sens_Spec <- bind_rows(
mutate(blast_results, Method = 'BLAST'),
mutate(computer_results, Method  = 'COMP')
) %>%
left_join(., spp_count) %>%
left_join(., gen_count) %>%
left_join(., fam_count) %>%
left_join(., cnts, by = c('Sample', 'Method')) %>%
rowwise() %>%
mutate(
Species_false = NO_Species - Species_T,
Sp_Sens = (Species_T / Spp_No) * 100,
Sp_Prec = (Species_T / (Species_T + Species_F)) * 100,
FDR = (Species_F / (Species_F + Species_T)) * 100
) #%>%
ggplot(ACC_sens_Spec, aes(y = Sp_Acc,  x = Method, color = Method), alpha = 0.5) +
stat_boxplot(notch = T, notchwidth = 0.75,
varwidth = T,
outlier.shape = F, outlier.alpha = 0.8, outlier.colour = 'black') +
geom_jitter(width = 0.1, shape = 1) +
geom_text(data = sample_sizes, # draw samples sizes
aes(Method, Inf, label = n), color = 'black',
vjust = "inward", size = 4,
y = min_v * 0.5) + # note placing sample size below the minimum value
ggpubr::stat_compare_means(comparisons = my_comparisons,
aes(label = ..p.signif..),
tip.length = 0, vjust = 0.25, size = 4) +
expand_limits(y = min_v - 5) + # expand the plot so we can fit sample size
theme_bw() +
scale_colour_manual(values = c('#F4AFB4', '#94A89A')) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) + # % symbol
scale_x_discrete(labels = c('BLAST', 'Post Classification')) +
labs(y = 'Accuracy', title = 'Accuracy of "naive" BLAST & post classification') +
theme(legend.position = 'none',  # two groups, already labeled, seems redundant?
plot.title = element_text(hjust = 0.5))
ggplot(ACC_sens_Spec, aes(y = Sp_Acc,  x = Method, color = Method), alpha = 0.5) +
stat_boxplot(notch = T, notchwidth = 0.75,
varwidth = T,
outlier.shape = F, outlier.alpha = 0.8, outlier.colour = 'black') +
geom_jitter(width = 0.1, shape = 1) +
geom_text(data = sample_sizes, # draw samples sizes
aes(Method, Inf, label = n), color = 'black',
vjust = "inward", size = 4,
y = min_v * 0.5) + # note placing sample size below the minimum value
ggpubr::stat_compare_means(comparisons = my_comparisons,
aes(label = ..p.signif..),
tip.length = 0, vjust = 0.25, size = 4) +
expand_limits(y = min_v - 5) + # expand the plot so we can fit sample size
theme_bw() +
scale_colour_manual(values = c('#F4AFB4', '#94A89A')) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) + # % symbol
scale_x_discrete(labels = c('BLAST', 'Post Classification')) +
labs(y = 'Accuracy', title = 'Accuracy of "naive" BLAST & post classification') +
theme(legend.position = 'none',  # two groups, already labeled, seems redundant?
plot.title = element_text(hjust = 0.5))
ggplot(ACC_sens_Spec, aes(y = FDR,  x = Method, color = Method), alpha = 0.5) +
stat_boxplot(notch = T, notchwidth = 0.75,
varwidth = T,
outlier.shape = F, outlier.alpha = 0.8, outlier.colour = 'black') +
geom_jitter(width = 0.1, shape = 1) +
geom_text(data = sample_sizes, # draw samples sizes
aes(Method, Inf, label = n), color = 'black',
vjust = "inward", size = 4,
y = min_v * 0.5) + # note placing sample size below the minimum value
ggpubr::stat_compare_means(comparisons = my_comparisons,
aes(label = ..p.signif..),
tip.length = 0, vjust = 0.25, size = 4) +
expand_limits(y = min_v - 5) + # expand the plot so we can fit sample size
theme_bw() +
scale_colour_manual(values = c('#F4AFB4', '#94A89A')) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) + # % symbol
scale_x_discrete(labels = c('BLAST', 'Post Classification')) +
labs(y = 'Accuracy', title = 'Accuracy of "naive" BLAST & post classification') +
theme(legend.position = 'none',  # two groups, already labeled, seems redundant?
plot.title = element_text(hjust = 0.5))
